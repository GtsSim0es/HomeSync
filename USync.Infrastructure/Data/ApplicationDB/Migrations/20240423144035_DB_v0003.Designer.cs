// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using USync.Infrastructure.Data.ApplicationDB;

#nullable disable

namespace USync.Infrastructure.Data.ApplicationDB.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240423144035_DB_v0003")]
    partial class DB_v0003
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("USync.Domain.Entities.Adress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("TEXT");

                    b.Property<long>("CreatedUserId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("LastUserAlteration")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUserAlterationDateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Streat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ZipCode")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Adress");
                });

            modelBuilder.Entity("USync.Domain.Entities.Person", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("TEXT");

                    b.Property<long>("CreatedUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("LastUserAlteration")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUserAlterationDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("UserCalendarId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("UserTaskId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserCalendarId");

                    b.HasIndex("UserTaskId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("USync.Domain.Entities.Profile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("TEXT");

                    b.Property<long>("CreatedUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("LastUserAlteration")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUserAlterationDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("ProfileRuleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProfileRuleId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("USync.Domain.Entities.ProfileRule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("TEXT");

                    b.Property<long>("CreatedUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("LastUserAlteration")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUserAlterationDateTime")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ProfileId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfileRules");
                });

            modelBuilder.Entity("USync.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("TEXT");

                    b.Property<long>("CreatedUserId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("LastUserAlteration")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUserAlterationDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("ProfileId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("USync.Domain.Entities.UserCalendar", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AdressId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("TEXT");

                    b.Property<long>("CreatedUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("LastUserAlteration")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUserAlterationDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AdressId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCalendar");
                });

            modelBuilder.Entity("USync.Domain.Entities.UserTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("TEXT");

                    b.Property<long>("CreatedUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("LastUserAlteration")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUserAlterationDateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("TEXT");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserTasks");
                });

            modelBuilder.Entity("USync.Domain.Entities.Person", b =>
                {
                    b.HasOne("USync.Domain.Entities.UserCalendar", null)
                        .WithMany("People")
                        .HasForeignKey("UserCalendarId");

                    b.HasOne("USync.Domain.Entities.UserTask", null)
                        .WithMany("PeapleAsigned")
                        .HasForeignKey("UserTaskId");
                });

            modelBuilder.Entity("USync.Domain.Entities.Profile", b =>
                {
                    b.HasOne("USync.Domain.Entities.ProfileRule", "ProfileRule")
                        .WithMany()
                        .HasForeignKey("ProfileRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfileRule");
                });

            modelBuilder.Entity("USync.Domain.Entities.ProfileRule", b =>
                {
                    b.HasOne("USync.Domain.Entities.Profile", null)
                        .WithMany("ProfileRulesList")
                        .HasForeignKey("ProfileId");
                });

            modelBuilder.Entity("USync.Domain.Entities.User", b =>
                {
                    b.HasOne("USync.Domain.Entities.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("USync.Domain.Entities.UserCalendar", b =>
                {
                    b.HasOne("USync.Domain.Entities.Adress", "Adress")
                        .WithMany()
                        .HasForeignKey("AdressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("USync.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adress");

                    b.Navigation("User");
                });

            modelBuilder.Entity("USync.Domain.Entities.UserTask", b =>
                {
                    b.HasOne("USync.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("USync.Domain.Entities.Profile", b =>
                {
                    b.Navigation("ProfileRulesList");
                });

            modelBuilder.Entity("USync.Domain.Entities.UserCalendar", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("USync.Domain.Entities.UserTask", b =>
                {
                    b.Navigation("PeapleAsigned");
                });
#pragma warning restore 612, 618
        }
    }
}
